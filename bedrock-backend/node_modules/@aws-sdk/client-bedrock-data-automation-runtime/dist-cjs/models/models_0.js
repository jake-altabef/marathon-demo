"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceQuotaExceededException = exports.DataAutomationStage = exports.BlueprintStage = exports.ValidationException = exports.ThrottlingException = exports.ResourceNotFoundException = exports.InternalServerException = exports.AutomationJobStatus = exports.AccessDeniedException = void 0;
const BedrockDataAutomationRuntimeServiceException_1 = require("./BedrockDataAutomationRuntimeServiceException");
class AccessDeniedException extends BedrockDataAutomationRuntimeServiceException_1.BedrockDataAutomationRuntimeServiceException {
    name = "AccessDeniedException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
exports.AccessDeniedException = AccessDeniedException;
exports.AutomationJobStatus = {
    CLIENT_ERROR: "ClientError",
    CREATED: "Created",
    IN_PROGRESS: "InProgress",
    SERVICE_ERROR: "ServiceError",
    SUCCESS: "Success",
};
class InternalServerException extends BedrockDataAutomationRuntimeServiceException_1.BedrockDataAutomationRuntimeServiceException {
    name = "InternalServerException";
    $fault = "server";
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
exports.InternalServerException = InternalServerException;
class ResourceNotFoundException extends BedrockDataAutomationRuntimeServiceException_1.BedrockDataAutomationRuntimeServiceException {
    name = "ResourceNotFoundException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
class ThrottlingException extends BedrockDataAutomationRuntimeServiceException_1.BedrockDataAutomationRuntimeServiceException {
    name = "ThrottlingException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
exports.ThrottlingException = ThrottlingException;
class ValidationException extends BedrockDataAutomationRuntimeServiceException_1.BedrockDataAutomationRuntimeServiceException {
    name = "ValidationException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
exports.ValidationException = ValidationException;
exports.BlueprintStage = {
    DEVELOPMENT: "DEVELOPMENT",
    LIVE: "LIVE",
};
exports.DataAutomationStage = {
    DEVELOPMENT: "DEVELOPMENT",
    LIVE: "LIVE",
};
class ServiceQuotaExceededException extends BedrockDataAutomationRuntimeServiceException_1.BedrockDataAutomationRuntimeServiceException {
    name = "ServiceQuotaExceededException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
    }
}
exports.ServiceQuotaExceededException = ServiceQuotaExceededException;
